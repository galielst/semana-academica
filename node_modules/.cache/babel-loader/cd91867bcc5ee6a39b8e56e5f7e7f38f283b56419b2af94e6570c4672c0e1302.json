{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Documents\\\\registro-de-eventos\\\\src\\\\components\\\\Auth\\\\ResetPasswordForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { supabase } from \"../../supabaseClient\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPasswordForm() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [message, setMessage] = useState(null);\n  const [success, setSuccess] = useState(false);\n  const navigate = useNavigate();\n  async function handleSubmit(e) {\n    e.preventDefault();\n    setMessage(null);\n    if (password !== confirm) {\n      setMessage(\"❌ Las contraseñas no coinciden\");\n      return;\n    }\n    const {\n      error\n    } = await supabase.auth.updateUser({\n      password\n    });\n    if (error) {\n      setMessage(`❌ Error: ${error.message}`);\n    } else {\n      setMessage(\"✅ Contraseña actualizada con éxito, serás redirigido al inicio...\");\n      setSuccess(true);\n    }\n  }\n\n  // ⏳ Redirigir después de 4 segundos si la actualización fue exitosa\n  useEffect(() => {\n    if (success) {\n      const timer = setTimeout(() => {\n        navigate(\"/\");\n      }, 4000);\n      return () => clearTimeout(timer);\n    }\n  }, [success, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      maxWidth: 400,\n      margin: \"0 auto\",\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Ingresa tu nueva contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Nueva contrase\\xF1a\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true,\n      style: {\n        width: \"100%\",\n        padding: 8,\n        marginBottom: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Confirmar contrase\\xF1a\",\n      value: confirm,\n      onChange: e => setConfirm(e.target.value),\n      required: true,\n      style: {\n        width: \"100%\",\n        padding: 8,\n        marginBottom: 10\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      style: {\n        width: \"100%\",\n        padding: 10,\n        background: \"#16a34a\",\n        color: \"#fff\",\n        border: \"none\",\n        borderRadius: 8,\n        cursor: \"pointer\"\n      },\n      children: \"Guardar nueva contrase\\xF1a\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        marginTop: 10\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordForm, \"KqcE6PLs1/aS4YAuOZ2OKs8KjQY=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPasswordForm;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordForm\");","map":{"version":3,"names":["useState","useEffect","supabase","useNavigate","jsxDEV","_jsxDEV","ResetPasswordForm","_s","password","setPassword","confirm","setConfirm","message","setMessage","success","setSuccess","navigate","handleSubmit","e","preventDefault","error","auth","updateUser","timer","setTimeout","clearTimeout","onSubmit","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","width","marginBottom","background","color","border","borderRadius","cursor","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Home/Documents/registro-de-eventos/src/components/Auth/ResetPasswordForm.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { supabase } from \"../../supabaseClient\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function ResetPasswordForm() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [success, setSuccess] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setMessage(null);\r\n\r\n    if (password !== confirm) {\r\n      setMessage(\"❌ Las contraseñas no coinciden\");\r\n      return;\r\n    }\r\n\r\n    const { error } = await supabase.auth.updateUser({ password });\r\n\r\n    if (error) {\r\n      setMessage(`❌ Error: ${error.message}`);\r\n    } else {\r\n      setMessage(\"✅ Contraseña actualizada con éxito, serás redirigido al inicio...\");\r\n      setSuccess(true);\r\n    }\r\n  }\r\n\r\n  // ⏳ Redirigir después de 4 segundos si la actualización fue exitosa\r\n  useEffect(() => {\r\n    if (success) {\r\n      const timer = setTimeout(() => {\r\n        navigate(\"/\");\r\n      }, 4000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [success, navigate]);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      style={{ maxWidth: 400, margin: \"0 auto\", padding: 20 }}\r\n    >\r\n      <h3>Ingresa tu nueva contraseña</h3>\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Nueva contraseña\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        required\r\n        style={{ width: \"100%\", padding: 8, marginBottom: 10 }}\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        placeholder=\"Confirmar contraseña\"\r\n        value={confirm}\r\n        onChange={(e) => setConfirm(e.target.value)}\r\n        required\r\n        style={{ width: \"100%\", padding: 8, marginBottom: 10 }}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        style={{\r\n          width: \"100%\",\r\n          padding: 10,\r\n          background: \"#16a34a\",\r\n          color: \"#fff\",\r\n          border: \"none\",\r\n          borderRadius: 8,\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        Guardar nueva contraseña\r\n      </button>\r\n      {message && <p style={{ marginTop: 10 }}>{message}</p>}\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}